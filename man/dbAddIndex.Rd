% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table-indexing.R
\name{dbAddIndex}
\alias{dbAddIndex}
\title{Adds a Primary Key to an existing table}
\usage{
dbAddIndex(con, table, index, unique = FALSE, ...)
}
\arguments{
\item{con}{a DBConnection oject}

\item{table}{a character string specifying the name of an existing DBMS table}

\item{index}{a character vector of column names which will form the index}

\item{unique}{boolean, default = FALSE; If set to true, the constraint that all rows must have unique
 values for the index

    To specify a composite Indexfor the `symbol` and `date` columns use

    primary_key = c("symbol","date" )

For a table with a Unique Index defined, each records must have a unqiue index value. Attempting to `INSERT`
records into the DB will with  duplicate values on a unique index to an existing record causes an ERROR}
}
\description{
`dbCreateTable` does not directly support adding primary or secondary indexes to the table being created.
Properly chosen indexing of tables increases query performance.
}
\details{
The default `dbAddIndex()` method performs checks that
the targeted table exists and that the columns specified for the index exist in the target table. the method
throws an error if either condition is FALSE

The sql generation uses the function `sqlAQddIndex()` another S4 generic defined in this package.
Default sql generation is appropriate for MariaDB and MySQL.
}
\seealso{
Other DBIConnection generics: \code{\link{dbAddPrimaryKey}},
  \code{\link{dbReplaceInTable}},
  \code{\link{dbUpdateTable}}
}
\concept{DBIConnection generics}
