% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql-generation.R
\name{sqlSetClause}
\alias{sqlSetClause}
\title{Compose an on clause for a table join}
\usage{
sqlSetClause(con, x, y, set, ...)
}
\arguments{
\item{x, y}{names of tbls to join. These will be quoted with dbQuoteIdentifier}

\item{set}{a character vector of columns to match .

  To set  different variables on x and y use a named vector.
  For example, `by = c("a" = "b")` will translate to
  SET  `x.a` = `y.b`.

  Character vectors will be escaped with [dbQuoteIdenitifer()].}
}
\description{
`sqlSetClause()` generates a single SQL string that forms the set clause
for an SQL Update statment two tables.
The default methods are MariaDB, MySQL compliant.
These methods are mostly useful for backend implementers.
}
\examples{

}
\seealso{
Other SQL generation: \code{\link{sqlAlterTableWithPrimaryKey}},
  \code{\link{sqlOnClause}},
  \code{\link{sqlReplaceInTable}},
  \code{\link{sqlUpdateTable}}
}
\concept{SQL generation}
